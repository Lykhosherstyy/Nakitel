/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$big-cart-name: 'big-cart';
$big-cart-x: 0px;
$big-cart-y: 0px;
$big-cart-offset-x: 0px;
$big-cart-offset-y: 0px;
$big-cart-width: 57px;
$big-cart-height: 50px;
$big-cart-total-width: 117px;
$big-cart-total-height: 108px;
$big-cart-image: 'sprite.png';
$big-cart: (0px, 0px, 0px, 0px, 57px, 50px, 117px, 108px, 'sprite.png', 'big-cart', );
$facebook-name: 'facebook';
$facebook-x: 57px;
$facebook-y: 0px;
$facebook-offset-x: -57px;
$facebook-offset-y: 0px;
$facebook-width: 30px;
$facebook-height: 30px;
$facebook-total-width: 117px;
$facebook-total-height: 108px;
$facebook-image: 'sprite.png';
$facebook: (57px, 0px, -57px, 0px, 30px, 30px, 117px, 108px, 'sprite.png', 'facebook', );
$google-name: 'google';
$google-x: 0px;
$google-y: 50px;
$google-offset-x: 0px;
$google-offset-y: -50px;
$google-width: 30px;
$google-height: 30px;
$google-total-width: 117px;
$google-total-height: 108px;
$google-image: 'sprite.png';
$google: (0px, 50px, 0px, -50px, 30px, 30px, 117px, 108px, 'sprite.png', 'google', );
$rss-name: 'rss';
$rss-x: 30px;
$rss-y: 50px;
$rss-offset-x: -30px;
$rss-offset-y: -50px;
$rss-width: 30px;
$rss-height: 30px;
$rss-total-width: 117px;
$rss-total-height: 108px;
$rss-image: 'sprite.png';
$rss: (30px, 50px, -30px, -50px, 30px, 30px, 117px, 108px, 'sprite.png', 'rss', );
$search-icon-name: 'search-icon';
$search-icon-x: 60px;
$search-icon-y: 50px;
$search-icon-offset-x: -60px;
$search-icon-offset-y: -50px;
$search-icon-width: 26px;
$search-icon-height: 21px;
$search-icon-total-width: 117px;
$search-icon-total-height: 108px;
$search-icon-image: 'sprite.png';
$search-icon: (60px, 50px, -60px, -50px, 26px, 21px, 117px, 108px, 'sprite.png', 'search-icon', );
$sm-cart-name: 'sm-cart';
$sm-cart-x: 0px;
$sm-cart-y: 80px;
$sm-cart-offset-x: 0px;
$sm-cart-offset-y: -80px;
$sm-cart-width: 32px;
$sm-cart-height: 28px;
$sm-cart-total-width: 117px;
$sm-cart-total-height: 108px;
$sm-cart-image: 'sprite.png';
$sm-cart: (0px, 80px, 0px, -80px, 32px, 28px, 117px, 108px, 'sprite.png', 'sm-cart', );
$twitter-name: 'twitter';
$twitter-x: 87px;
$twitter-y: 0px;
$twitter-offset-x: -87px;
$twitter-offset-y: 0px;
$twitter-width: 30px;
$twitter-height: 30px;
$twitter-total-width: 117px;
$twitter-total-height: 108px;
$twitter-image: 'sprite.png';
$twitter: (87px, 0px, -87px, 0px, 30px, 30px, 117px, 108px, 'sprite.png', 'twitter', );
$vk-name: 'vk';
$vk-x: 87px;
$vk-y: 30px;
$vk-offset-x: -87px;
$vk-offset-y: -30px;
$vk-width: 30px;
$vk-height: 30px;
$vk-total-width: 117px;
$vk-total-height: 108px;
$vk-image: 'sprite.png';
$vk: (87px, 30px, -87px, -30px, 30px, 30px, 117px, 108px, 'sprite.png', 'vk', );
$spritesheet-width: 117px;
$spritesheet-height: 108px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($big-cart, $facebook, $google, $rss, $search-icon, $sm-cart, $twitter, $vk, );
$spritesheet: (117px, 108px, 'sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(../images/sprite.png);
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
